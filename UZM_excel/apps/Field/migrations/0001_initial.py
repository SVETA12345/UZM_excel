# Generated by Django 4.0.3 on 2023-11-02 10:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(choices=[('SMTL', 'Самотлорнефтегаз'), ('SKNG', 'Севкомнефтегаз'), ('UVAT', 'Уватнефтегаз'), ('SBNG', 'Сибнефтегаз'), ('UDMR', 'Удмуртнефть'), ('TUNG', 'ТЮНГ'), ('UGNG', 'Юганскнефтегаз'), ('SLAV', 'Славнефть'), ('HRNG', 'Харампурнефтегаз'), ('RNHA', 'РНША'), ('VOIL', 'Восток Ойл'), ('PRNG', 'Пурнефтегаз'), ('VCNG', 'ВЧНГ'), ('ROSPAN', 'РОСПАН ИНТЕРНЕШНЛ')], max_length=100, unique=True, verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Дочернее общество',
                'verbose_name_plural': 'Дочерние общества',
            },
        ),
        migrations.CreateModel(
            name='ContractorDrill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drill_contractor_name', models.CharField(max_length=100, unique=True, verbose_name='Подрядчик по бурению')),
            ],
            options={
                'verbose_name': 'Подрядчик по бурению',
                'verbose_name_plural': 'Подрядчики по бурению',
            },
        ),
        migrations.CreateModel(
            name='ContractorNNB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dd_contractor_name', models.CharField(max_length=100, unique=True, verbose_name='Подрядчик по ННБ')),
            ],
            options={
                'verbose_name': 'Подрядчик по ННБ',
                'verbose_name_plural': 'Подрядчики по ННБ',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100, unique=True, verbose_name='Месторождение')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='Field.client', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Месторождение',
                'verbose_name_plural': 'Месторождения',
            },
        ),
        migrations.CreateModel(
            name='Pad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pad_name', models.CharField(max_length=20, verbose_name='Куст')),
                ('field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pads', to='Field.field', verbose_name='Месторождение')),
            ],
            options={
                'verbose_name': 'Куст',
                'verbose_name_plural': 'Кусты',
                'unique_together': {('field', 'pad_name')},
            },
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well_name', models.CharField(max_length=20, verbose_name='Скважина')),
                ('active_from', models.FloatField(blank=True, null=True, verbose_name='Глубина начала активной фазы, м')),
                ('status', models.CharField(blank=True, choices=[('PLAN', 'Планируется'), ('NOTA', 'В бурении'), ('STOP', 'Приостановлена'), ('FINI', 'Добурена')], max_length=4, null=True, verbose_name='Статус состояния скважины')),
                ('status_drilling', models.CharField(blank=True, choices=[('ACTV', 'Активная фаза'), ('NOACT', 'Неактивная стадия')], max_length=5, null=True, verbose_name='Статус бурения')),
                ('in_statistics', models.BooleanField(blank=True, null=True, verbose_name='учитывать в статистике')),
                ('well_type', models.CharField(blank=True, choices=[('VNS0', 'ВНС'), ('NNS0', 'ННС'), ('ZBS0', 'ЗБС'), ('BGS0', 'БГС')], max_length=4, null=True, verbose_name='Тип скважины')),
                ('RKB', models.FloatField(blank=True, default=84, null=True, verbose_name='Альтитуда стола ротора, м')),
                ('VSaz', models.FloatField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360)], verbose_name='Азимут вертикальной секции')),
                ('coordinate_system', models.CharField(blank=True, max_length=20, null=True, verbose_name='Система координат')),
                ('latitude', models.TextField(blank=True, null=True, verbose_name='Широта географическая')),
                ('longtitude', models.TextField(blank=True, null=True, verbose_name='Долгота географическая')),
                ('NY', models.FloatField(blank=True, null=True, verbose_name='Широта Y (прямоугольные координаты), м')),
                ('EX', models.FloatField(blank=True, null=True, verbose_name='Долгота X (прямоугольные координаты), м')),
                ('north_direction', models.CharField(blank=True, choices=[('GRID', 'Картографический'), ('TRUE', 'Географический'), ('MAGN', 'Магнитный')], max_length=4, null=True, verbose_name='Направление на север')),
                ('geomagnetic_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='Геомагнитная модель')),
                ('geomagnetic_date', models.DateField(blank=True, null=True, verbose_name='Дата геомагнитной привязки')),
                ('btotal', models.FloatField(blank=True, null=True, verbose_name='Напряженность геомагнитного поля, нТл')),
                ('dip', models.FloatField(blank=True, null=True, verbose_name='Магнитное наклонение, град')),
                ('dec', models.FloatField(blank=True, null=True, verbose_name='Магнитное склонение, град')),
                ('grid_convergence', models.FloatField(blank=True, null=True, verbose_name='Сближение меридианов, град')),
                ('total_correction', models.FloatField(blank=True, null=True, verbose_name='Общая поправка, град')),
                ('gtotal', models.FloatField(blank=True, null=True, verbose_name='Напряженность гравитационного поля, G')),
                ('critical_azimuth', models.BooleanField(blank=True, null=True, verbose_name='Критический азимут')),
                ('T1_start', models.DateField(blank=True, null=True, verbose_name='Начало сопровождения до Т1')),
                ('T1_end', models.DateField(blank=True, null=True, verbose_name='Начало сопровождения до Т3')),
                ('T3_start', models.DateField(blank=True, null=True, verbose_name='Окончание сопровождения до Т1')),
                ('T3_end', models.DateField(blank=True, null=True, verbose_name='Окончание сопровождения до Т3')),
                ('comment', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Комментарий')),
                ('mail_To', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Список рассылки почта "Кому"')),
                ('mail_Cc', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Список рассылки почта "Копия"')),
                ('pad_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wells', to='Field.pad', verbose_name='Куст')),
            ],
            options={
                'verbose_name': 'Скважина',
                'verbose_name_plural': 'Скважины',
                'unique_together': {('well_name', 'pad_name')},
            },
        ),
        migrations.CreateModel(
            name='WellSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True, verbose_name='Текст')),
                ('time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('well', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='Field.well', verbose_name='Сводка')),
            ],
            options={
                'verbose_name': 'Сводка',
                'verbose_name_plural': 'Сводка',
            },
        ),
        migrations.CreateModel(
            name='Wellbore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wellbore', models.CharField(choices=[('PLT0', 'ПЛ'), ('PLT1', 'ПЛ1'), ('PLT2', 'ПЛ2'), ('MAIN', 'Основной ствол'), ('BGS0', 'БГС'), ('ST01', 'СТ1'), ('ST02', 'СТ2'), ('ST03', 'СТ3'), ('ST04', 'СТ4'), ('BS01', 'БС1'), ('BS02', 'БС2'), ('BS03', 'БС3'), ('BS04', 'БС4'), ('BS05', 'БС5'), ('BS06', 'БС6'), ('BS07', 'БС7'), ('BS08', 'БС8')], max_length=4, verbose_name='Ствол')),
                ('igirgi_drilling', models.BooleanField(blank=True, default=False, verbose_name='Бурение по траектории ИГиРГИ')),
                ('current_depth', models.FloatField(blank=True, null=True, verbose_name='Текущая глубина, м')),
                ('well_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wellbores', to='Field.well', verbose_name='Скважина')),
            ],
            options={
                'verbose_name': 'Ствол',
                'verbose_name_plural': 'Стволы',
                'unique_together': {('well_name', 'wellbore')},
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=20, verbose_name='Секция')),
                ('target_depth', models.FloatField(blank=True, null=True, verbose_name='Плановая глубина секции, м')),
                ('wellbore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='Field.wellbore', verbose_name='Ствол')),
            ],
            options={
                'verbose_name': 'Секция',
                'verbose_name_plural': 'Секции',
                'unique_together': {('section', 'wellbore')},
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_number', models.IntegerField(verbose_name='Рейс')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала рейса')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания рейса')),
                ('start_depth', models.FloatField(blank=True, null=True, verbose_name='Глубина начала рейса')),
                ('end_depth', models.FloatField(blank=True, null=True, verbose_name='Конечная глубина рейса')),
                ('in_statistics', models.BooleanField(blank=True, null=True, verbose_name='Учитывать в статистике')),
                ('memory', models.CharField(blank=True, choices=[('RQT1', 'Запрошена'), ('RQT2', 'Запрошена повторно'), ('RCIV', 'Получена'), ('CHEK', 'Проверена'), ('NMEM', 'Без памяти'), ('NOTR', 'Не предоставлена')], max_length=4, null=True, verbose_name='Память')),
                ('bha', models.CharField(blank=True, choices=[('RQT1', 'Запрошена'), ('RQT2', 'Запрошена повторно'), ('RCIV', 'Получена'), ('SLIK', 'Гладкая'), ('SAGC', 'SAG посчитан')], max_length=4, null=True, verbose_name='КНБК')),
                ('sag', models.FloatField(blank=True, null=True, verbose_name='SAG')),
                ('dd_contractor_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='runs', to='Field.contractornnb', verbose_name='Подрядчик по ННБ')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='Field.section', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Рейс',
                'verbose_name_plural': 'Рейсы',
                'unique_together': {('section', 'run_number')},
            },
        ),
    ]
